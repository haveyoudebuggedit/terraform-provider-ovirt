name: Backport
on:
  push:
    branches:
      - main
      - v1
jobs:
  backport:
    name: Auto-backport
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main
      - name: Auto-backport changes to v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euxo pipefail
          git checkout v1
          git checkout main
          for COMMITID in $(git cherry v1 | grep '+' | awk '{print $2}'); do
            PRID=$(gh pr list -s open -B v1 -H backport/${COMMITID} | grep '#' | awk '{print $1}' | sed -e 's/#//')
            if [ -z "${PRID}" ]; then
              TITLE=$(git log --format=%B -n 1 ${COMMITID} | head -n 1)
              echo "Creating backport PR for ${COMMITID}: ${TITLE}..."
              git config user.name "GitHub Actions"
              git config user.email noreply@github.com
              git checkout v1
              git checkout -b backport/${COMMITID}
              git cherry-pick ${COMMITID}
              git push --force -u origin backport/${COMMITID}
              gh pr create --title "Backport: ${TITLE}" --body "This is an automatically created PR to backport the change in the title to the v1 branch. You can add a review to automatically merge this change. Please do not update this branch by hand, your changes may be lost." --base v1 --head backport/${COMMITID}
              PRID=$(gh pr list | grep backport/${COMMITID} | awk '{print $1}' | sed -e 's/#//')
              gh pr merge --auto "${PRID}" -s
            else
              echo "Backport for ${COMMITID} already exists, skipping..."
            fi
          done